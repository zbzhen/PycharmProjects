import numpy as np
import re
from mayavi import mlab

from numpy import array, arange, random
from tvtk.api import tvtk
from mayavi.scripts import mayavi2
from mayavi.sources.vtk_data_source import VTKDataSource
from mayavi.modules.surface import Surface

class PlotGrid3D(object):
    def __init__(self):
        pass
    def from_plotdat_get_pte(self, datafile):
        with open(datafile) as f:
            lines = f.readlines()
            index = 2

            while index < len(lines):
                tmp = re.findall(r"\d+\d*", str(lines[index: index+1]))
                npoints, nelements = map(int, tmp)
                index += 1
                points = np.loadtxt(lines[index:index+npoints], float)
                index += npoints
                elements = np.loadtxt(lines[index:index+nelements], int)
                index += nelements
                tet_type = tvtk.Hexahedron().cell_type
                ug = tvtk.UnstructuredGrid(points=points[:,:3])
                ug.set_cells(tet_type, elements)
                ug.point_data.scalars = points.T[-1]
                return ug
                #return points, elements

mlab.figure(fgcolor=(0, 0, 0), bgcolor=(1.0, 1.0, 1.0), size=(700, 700))
a = PlotGrid3D()
ug = a.from_plotdat_get_pte("uplot.dat")


@mayavi2.standalone
def view():
    mayavi.new_scene()
    src = VTKDataSource(data = ug)
    mayavi.add_source(src)
    s = Surface()
    mayavi.add_module(s)

if __name__ == '__main__':
    view()
